# Generated from Postman collection
# and hand-edited from there. Good luck!
openapi: 3.1.0
info:
  title: "Stytch B2B API [Last Updated: 2024-02-14]"
  description: >-
    Stytchâ€™s B2B API is designed to address the unique authentication and user
    management needs of organization-based applications at every stage of
    growth.
  version: 1.0.0
servers:
  - description: Test environment
    url: https://test.stytch.com
  - description: Live environment
    url: https://api.stytch.com
components:
  schemas:
    ActiveSCIMConnection:
      type: object
      properties:
        connection_id:
          type: string
        display_name:
          type: string
        bearer_token_last_four:
          type: string
        bearer_token_expires_at:
          type: string
          format: date-time
      required:
        - connection_id
        - display_name
        - bearer_token_last_four

    ActiveSSOConnection:
      type: object
      properties:
        connection_id:
          type: string
        display_name:
          type: string
        identity_provider:
          type: string
      required:
        - connection_id
        - display_name
        - identity_provider

    AmazonOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    AppleOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    AuthenticatorAppFactor:
      type: object
      properties:
        totp_id:
          type: string
      required:
        - totp_id

    AuthenticationFactor:
      type: object
      properties:
        type:
          type: string
          description: >
            The type of authentication factor. Possible values include `magic_link`, `otp`, `oauth`, `password`, `email_otp`, `sso`, etc.
        delivery_method:
          type: string
          description: >
            The method used to deliver the authentication factor. Possible values depend on the `type`.
        last_authenticated_at:
          type: string
          format: date-time
          description: >
            The timestamp when the factor was last authenticated.
        created_at:
          type: string
          format: date-time
          description: >
            The timestamp when the factor was initially authenticated.
        updated_at:
          type: string
          format: date-time
          description: >
            The timestamp when the factor was last updated.
        email_factor:
          $ref: "#/components/schemas/EmailFactor"
        phone_number_factor:
          $ref: "#/components/schemas/PhoneNumberFactor"
        google_oauth_factor:
          $ref: "#/components/schemas/GoogleOAuthFactor"
        microsoft_oauth_factor:
          $ref: "#/components/schemas/MicrosoftOAuthFactor"
        apple_oauth_factor:
          $ref: "#/components/schemas/AppleOAuthFactor"
        amazon_oauth_factor:
          $ref: "#/components/schemas/AmazonOAuthFactor"
        webauthn_factor:
          $ref: "#/components/schemas/WebAuthnFactor"
        authenticator_app_factor:
          $ref: "#/components/schemas/AuthenticatorAppFactor"
        github_oauth_factor:
          $ref: "#/components/schemas/GithubOAuthFactor"
        recovery_code_factor:
          $ref: "#/components/schemas/RecoveryCodeFactor"
        facebook_oauth_factor:
          $ref: "#/components/schemas/FacebookOAuthFactor"
        crypto_wallet_factor:
          $ref: "#/components/schemas/CryptoWalletFactor"
        bitbucket_oauth_factor:
          $ref: "#/components/schemas/BitbucketOAuthFactor"
        coinbase_oauth_factor:
          $ref: "#/components/schemas/CoinbaseOAuthFactor"
        discord_oauth_factor:
          $ref: "#/components/schemas/DiscordOAuthFactor"
        figma_oauth_factor:
          $ref: "#/components/schemas/FigmaOAuthFactor"
        git_lab_oauth_factor:
          $ref: "#/components/schemas/GitLabOAuthFactor"
        instagram_oauth_factor:
          $ref: "#/components/schemas/InstagramOAuthFactor"
        linked_in_oauth_factor:
          $ref: "#/components/schemas/LinkedInOAuthFactor"
        shopify_oauth_factor:
          $ref: "#/components/schemas/ShopifyOAuthFactor"
        slack_oauth_factor:
          $ref: "#/components/schemas/SlackOAuthFactor"
        snapchat_oauth_factor:
          $ref: "#/components/schemas/SnapchatOAuthFactor"
        spotify_oauth_factor:
          $ref: "#/components/schemas/SpotifyOAuthFactor"
        steam_oauth_factor:
          $ref: "#/components/schemas/SteamOAuthFactor"
        tik_tok_oauth_factor:
          $ref: "#/components/schemas/TikTokOAuthFactor"
        twitch_oauth_factor:
          $ref: "#/components/schemas/TwitchOAuthFactor"
        twitter_oauth_factor:
          $ref: "#/components/schemas/TwitterOAuthFactor"
        embeddable_magic_link_factor:
          $ref: "#/components/schemas/EmbeddableMagicLinkFactor"
        biometric_factor:
          $ref: "#/components/schemas/BiometricFactor"
        saml_sso_factor:
          $ref: "#/components/schemas/SAMLSSOFactor"
        oidc_sso_factor:
          $ref: "#/components/schemas/OIDCSSOFactor"
        salesforce_oauth_factor:
          $ref: "#/components/schemas/SalesforceOAuthFactor"
        yahoo_oauth_factor:
          $ref: "#/components/schemas/YahooOAuthFactor"
        hubspot_oauth_factor:
          $ref: "#/components/schemas/HubspotOAuthFactor"
        slack_oauth_exchange_factor:
          $ref: "#/components/schemas/SlackOAuthExchangeFactor"
        hubspot_oauth_exchange_factor:
          $ref: "#/components/schemas/HubspotOAuthExchangeFactor"
        github_oauth_exchange_factor:
          $ref: "#/components/schemas/GithubOAuthExchangeFactor"
        google_oauth_exchange_factor:
          $ref: "#/components/schemas/GoogleOAuthExchangeFactor"
        impersonated_factor:
          $ref: "#/components/schemas/ImpersonatedFactor"
        oauth_access_token_exchange_factor:
          $ref: "#/components/schemas/OAuthAccessTokenExchangeFactor"
      required:
        - type
        - delivery_method

    BiometricFactor:
      type: object
      properties:
        biometric_registration_id:
          type: string
      required:
        - biometric_registration_id

    BitbucketOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    CoinbaseOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    CryptoWalletFactor:
      type: object
      properties:
        crypto_wallet_id:
          type: string
        crypto_wallet_address:
          type: string
        crypto_wallet_type:
          type: string
      required:
        - crypto_wallet_id
        - crypto_wallet_address
        - crypto_wallet_type

    DiscordOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    EmailFactor:
      type: object
      properties:
        email_id:
          type: string
          description: >
            The globally unique UUID of the Member's email.
        email_address:
          type: string
          description: >
            The email address of the Member.
      required:
        - email_id
        - email_address

    EmailImplicitRoleAssignment:
      type: object
      properties:
        domain:
          type: string
        role_id:
          type: string
      required:
        - domain
        - role_id

    EmbeddableMagicLinkFactor:
      type: object
      properties:
        embedded_id:
          type: string
      required:
        - embedded_id

    FacebookOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    FigmaOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    GitLabOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    GithubOAuthExchangeFactor:
      type: object
      properties:
        email_id:
          type: string
      required:
        - email_id

    GithubOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    GoogleOAuthExchangeFactor:
      type: object
      properties:
        email_id:
          type: string
      required:
        - email_id

    GoogleOAuthFactor:
      type: object
      properties:
        id:
          type: string
          description: >
            The unique ID of an OAuth registration.
        provider_subject:
          type: string
          description: >
            The unique identifier for the User within a given OAuth provider.
        email_id:
          type: string
          description: >
            The globally unique UUID of the Member's email.
      required:
        - id
        - provider_subject

    HubspotOAuthExchangeFactor:
      type: object
      properties:
        email_id:
          type: string
      required:
        - email_id

    HubspotOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    ImpersonatedFactor:
      type: object
      properties:
        impersonator_id:
          type: string
        impersonator_email_address:
          type: string
      required:
        - impersonator_id
        - impersonator_email_address

    InstagramOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    JWK:
      type: object
      properties:
        kty:
          type: string
          description: Key type.
        use:
          type: string
          description: Public key use.
        key_ops:
          type: array
          items:
            type: string
          description: Key operations.
        alg:
          type: string
          description: Algorithm.
        kid:
          type: string
          description: Key ID.
        x5c:
          type: array
          items:
            type: string
          description: X.509 certificate chain.
        n:
          type: string
          description: RSA modulus.
        e:
          type: string
          description: RSA public exponent.
      required:
        - kty
        - kid

    LinkedInOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    Member:
      type: object
      properties:
        organization_id:
          type: string
          description: >-
            Globally unique UUID that identifies a specific Organization.
        member_id:
          type: string
          description: >-
            Globally unique UUID that identifies a specific Member.
        email_address:
          type: string
          description: The email address of the Member.
        status:
          type: string
          description: >-
            The status of the Member. The possible values are: `pending`, `invited`, `active`, or `deleted`.
        name:
          type: string
          description: The name of the Member.
        sso_registrations:
          type: array
          items:
            $ref: "#/components/schemas/SSORegistration"
        is_breakglass:
          type: boolean
          description: >-
            Identifies the Member as a break glass user for emergency access.
        member_password_id:
          type: string
          description: >-
            Globally unique UUID that identifies a Member's password.
        oauth_registrations:
          type: array
          items:
            $ref: "#/components/schemas/OAuthRegistration"
        email_address_verified:
          type: boolean
          description: >-
            Whether or not the Member's email address is verified.
        mfa_phone_number_verified:
          type: boolean
          description: >-
            Whether or not the Member's phone number is verified.
        is_admin:
          type: boolean
          description: >-
            Whether or not the Member has the `stytch_admin` Role.
        totp_registration_id:
          type: string
          description: >-
            Globally unique UUID that identifies a Member's TOTP registration.
        retired_email_addresses:
          type: array
          items:
            $ref: "#/components/schemas/RetiredEmail"
        mfa_enrolled:
          type: boolean
          description: >-
            Whether the Member is enrolled in MFA.
        mfa_phone_number:
          type: string
          description: >-
            The Member's phone number. A Member may only have one phone number.
        default_mfa_method:
          type: string
          description: >-
            The default MFA method for the Member.
        roles:
          type: array
          items:
            $ref: "#/components/schemas/MemberRole"
        trusted_metadata:
          type: object
          additionalProperties: true
          description: >-
            An arbitrary JSON object for storing application-specific data or identity-provider-specific data.
        untrusted_metadata:
          type: object
          additionalProperties: true
          description: >-
            An arbitrary JSON object of application-specific data.
        created_at:
          type: string
          format: date-time
          description: >-
            The timestamp of the Member's creation.
        updated_at:
          type: string
          format: date-time
          description: >-
            The timestamp of when the Member was last updated.
        scim_registration:
          $ref: "#/components/schemas/SCIMRegistration"
        external_id:
          type: string
          description: >-
            The ID of the member given by the identity provider.
      required:
        - organization_id
        - member_id
        - email_address
        - status
        - name
        - sso_registrations
        - is_breakglass
        - member_password_id
        - oauth_registrations
        - email_address_verified
        - mfa_phone_number_verified
        - is_admin
        - totp_registration_id
        - retired_email_addresses
        - mfa_enrolled
        - mfa_phone_number
        - default_mfa_method
        - roles

    MemberRole:
      type: object
      properties:
        role_id:
          type: string
          description: >-
            The unique identifier of the RBAC Role.
        sources:
          type: array
          items:
            $ref: "#/components/schemas/MemberRoleSource"
      required:
        - role_id
        - sources

    MemberRoleSource:
      type: object
      properties:
        type:
          type: string
          description: >-
            The type of role assignment.
        details:
          type: object
          additionalProperties: true
          description: >-
            Additional metadata about the source assignment.
      required:
        - type

    MemberSession:
      type: object
      properties:
        member_session_id:
          type: string
          description: Globally unique UUID that identifies a specific Session.
        member_id:
          type: string
          description: Globally unique UUID that identifies a specific Member.
        started_at:
          type: string
          format: date-time
          description: >
            The timestamp when the Session was created. Values conform to the RFC 3339 standard and are expressed in UTC.
        last_accessed_at:
          type: string
          format: date-time
          description: >
            The timestamp when the Session was last accessed. Values conform to the RFC 3339 standard and are expressed in UTC.
        expires_at:
          type: string
          format: date-time
          description: >
            The timestamp when the Session expires. Values conform to the RFC 3339 standard and are expressed in UTC.
        authentication_factors:
          type: array
          items:
            $ref: "#/components/schemas/AuthenticationFactor"
          description: An array of different authentication factors that comprise a Session.
        organization_id:
          type: string
          description: >
            Globally unique UUID that identifies a specific Organization. The `organization_id` is critical to perform operations on an Organization.
        roles:
          type: array
          items:
            type: string
          description: A list of roles assigned to the Member in the Session.
        custom_claims:
          type: object
          additionalProperties: true
          description: >
            The custom claims map for a Session. Claims can be added to a session during a Sessions authenticate call.
      required:
        - member_session_id
        - member_id
        - started_at
        - last_accessed_at
        - expires_at
        - authentication_factors
        - organization_id
        - roles

    MicrosoftOAuthFactor:
      type: object
      properties:
        id:
          type: string
          description: >
            The unique ID of an OAuth registration.
        provider_subject:
          type: string
          description: >
            The unique identifier for the User within a given OAuth provider.
        email_id:
          type: string
          description: >
            The globally unique UUID of the Member's email.
      required:
        - id
        - provider_subject

    OAuthAccessTokenExchangeFactor:
      type: object
      properties:
        client_id:
          type: string
      required:
        - client_id

    OAuthRegistration:
      type: object
      properties:
        provider_type:
          type: string
          description: >-
            Denotes the OAuth identity provider the user has authenticated with.
        provider_subject:
          type: string
          description: >-
            The unique identifier for the User within a given OAuth provider.
        member_oauth_registration_id:
          type: string
          description: >-
            The unique ID of an OAuth registration.
        profile_picture_url:
          type: string
          description: >-
            If available, the URL of the User's profile picture set in the OAuth provider.
        locale:
          type: string
          description: >-
            If available, the Member's locale set in the OAuth provider.
      required:
        - provider_type
        - provider_subject
        - member_oauth_registration_id

    OIDCSSOFactor:
      type: object
      properties:
        id:
          type: string
        provider_id:
          type: string
        external_id:
          type: string
      required:
        - id
        - provider_id
        - external_id

    PhoneNumberFactor:
      type: object
      properties:
        phone_id:
          type: string
          description: >
            The globally unique UUID of the Member's phone number.
        phone_number:
          type: string
          description: >
            The phone number of the Member.
      required:
        - phone_id
        - phone_number

    RecoveryCodeFactor:
      type: object
      properties:
        totp_recovery_code_id:
          type: string
      required:
        - totp_recovery_code_id

    RetiredEmail:
      type: object
      properties:
        email_id:
          type: string
          description: >-
            The globally unique UUID of a Member's email.
        email_address:
          type: string
          description: >-
            The email address of the Member.
      required:
        - email_id
        - email_address

    SAMLSSOFactor:
      type: object
      properties:
        id:
          type: string
        provider_id:
          type: string
        external_id:
          type: string
      required:
        - id
        - provider_id
        - external_id

    SalesforceOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    SCIMRegistration:
      type: object
      properties:
        connection_id:
          type: string
          description: >-
            The ID of the SCIM connection.
        registration_id:
          type: string
          description: >-
            The unique ID of a SCIM Registration.
        external_id:
          type: string
          description: >-
            The ID of the member given by the identity provider.
        scim_attributes:
          type: object
          additionalProperties: true
          description: >-
            An object for storing SCIM attributes brought over from the identity provider.
      required:
        - connection_id
        - registration_id

    ShopifyOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    SlackOAuthExchangeFactor:
      type: object
      properties:
        email_id:
          type: string
      required:
        - email_id

    SlackOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    SnapchatOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    SpotifyOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    SteamOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    TikTokOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    TwitchOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    TwitterOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject

    WebAuthnFactor:
      type: object
      properties:
        webauthn_registration_id:
          type: string
        domain:
          type: string
        user_agent:
          type: string
      required:
        - webauthn_registration_id
        - domain

    YahooOAuthFactor:
      type: object
      properties:
        id:
          type: string
        provider_subject:
          type: string
        email_id:
          type: string
      required:
        - id
        - provider_subject
securitySchemes:
  noauthAuth:
    type: http
    scheme: noauth
  basicAuth:
    type: http
    scheme: basic
security:
  - basicAuth: []
paths:
  /v1/b2b/organizations:
    post:
      operationId: organizations/create
      tags:
        - organizations
      summary: Create an Organization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "organization_name": "Your Org Name",
                    "organization_slug": "your-org-slug"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/create-organization
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  organization:
                    $ref: "#/components/schemas/Organization"
                required:
                  - request_id
                  - status_code
                  - organization
  /v1/b2b/organizations/{organization_id}:
    get:
      operationId: organizations/get
      tags:
        - organizations
      summary: Get an Organization
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  organization:
                    $ref: "#/components/schemas/Organization"
                required:
                  - request_id
                  - status_code
                  - organization
    put:
      operationId: organizations/update
      tags:
        - organizations
      summary: Update an Organization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "organization_name": "New updated name",
                    "email_jit_provisioning": "RESTRICTED",
                    "email_allowed_domains": ["stytch.com"]
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/update-organization
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-05e98d25-f22f-41bd-a511-a6c270364a88
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  organization:
                    $ref: "#/components/schemas/Organization"
                required:
                  - request_id
                  - status_code
                  - organization
    delete:
      operationId: organizations/delete
      tags:
        - organizations
      summary: Delete an Organization
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  organization_id:
                    type: string
                required:
                  - request_id
                  - status_code
                  - organization_id
  /v1/b2b/organizations/search:
    post:
      operationId: organizations/search
      tags:
        - organizations
      summary: Search for Organizations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "limit": 100,
                    "cursor": ""
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/search-organizations
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  results_metadata:
                    type: object
                    properties:
                      next_cursor:
                        type: string
                      total:
                        type: integer
                  organizations:
                    type: array
                    items:
                      $ref: "#/components/schemas/Organization"
                required:
                  - request_id
                  - status_code
                  - results_metadata
                  - organizations
  /v1/b2b/organizations/{organization_id}/members:
    post:
      operationId: members/create
      tags:
        - members
      summary: Create a Member
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "email_address": "test@stytch.com"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/create-member
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  member_id:
                    type: string
                  member:
                    $ref: "#/components/schemas/Member"
                  organization:
                    $ref: "#/components/schemas/Organization"
                required:
                  - request_id
                  - status_code
                  - member_id
                  - member
                  - organization
  /v1/b2b/organizations/{organization_id}/member:
    get:
      operationId: members/get
      tags:
        - members
      summary: Get a Member
      parameters:
        - name: member_id
          in: query
          schema:
            type: string
          description: Get member by ID
          example: member-test-306a1f1d-6869-45ac-9ef5-1d70e68ce49b
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-05e98d25-f22f-41bd-a511-a6c270364a88
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  member_id:
                    type: string
                  member:
                    $ref: "#/components/schemas/Member"
                  organization:
                    $ref: "#/components/schemas/Organization"
                required:
                  - request_id
                  - status_code
                  - member_id
                  - member
                  - organization
  /v1/b2b/organizations/members/dangerously_get/{member_id}:
    get:
      operationId: members/dangerously_get
      tags:
        - members
      summary: Get a Member (Dangerous)
      parameters:
        - name: member_id
          in: path
          schema:
            type: string
          required: true
          example: member-test-2a475638-7381-48f1-b03e-efcf80cf4544
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  member_id:
                    type: string
                  member:
                    $ref: "#/components/schemas/Member"
                  organization:
                    $ref: "#/components/schemas/Organization"
                required:
                  - request_id
                  - status_code
                  - member_id
                  - member
                  - organization
  /v1/b2b/organizations/{organization_id}/members/{member_id}:
    put:
      operationId: members/update
      tags:
        - members
      summary: Update a Member
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "name": "Test user"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/update-member
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
        - name: member_id
          in: path
          schema:
            type: string
          required: true
          example: member-test-a5a2f9f7-d150-49fb-94b0-adacbae82a70
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  member_id:
                    type: string
                  member:
                    $ref: "#/components/schemas/Member"
                  organization:
                    $ref: "#/components/schemas/Organization"
                required:
                  - request_id
                  - status_code
                  - member_id
                  - member
                  - organization
  /v1/b2b/organizations/{organization_id}/members/{member_id}/unlink_retired_email:
    post:
      operationId: members/unlink_retired_email
      tags:
        - members
      summary: Unlink Retired Email
      requestBody:
        content:
          application/json:
            schema:
              type: object
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
        - name: member_id
          in: path
          schema:
            type: string
          required: true
          example: member-test-a5a2f9f7-d150-49fb-94b0-adacbae82a70
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  member_id:
                    type: string
                  organization_id:
                    type: string
                  member:
                    $ref: "#/components/schemas/Member"
                  organization:
                    $ref: "#/components/schemas/Organization"
                required:
                  - request_id
                  - status_code
                  - member_id
                  - organization_id
                  - member
                  - organization
    delete:
      operationId: members/delete
      tags:
        - members
      summary: Delete a Member
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
        - name: member_id
          in: path
          schema:
            type: string
          required: true
          example: member-test-a5a2f9f7-d150-49fb-94b0-adacbae82a70
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  member_id:
                    type: string
                required:
                  - request_id
                  - status_code
                  - member_id
  /v1/b2b/organizations/{organization_id}/members/{member_id}/reactivate:
    put:
      operationId: members/reactivate
      tags:
        - members
      summary: Reactivate a Member
      requestBody:
        content: {}
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
        - name: member_id
          in: path
          schema:
            type: string
          required: true
          example: member-test-a5a2f9f7-d150-49fb-94b0-adacbae82a70
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  member_id:
                    type: string
                  member:
                    $ref: "#/components/schemas/Member"
                  organization:
                    $ref: "#/components/schemas/Organization"
                required:
                  - request_id
                  - status_code
                  - member_id
                  - member
                  - organization
  /v1/b2b/organizations/members/search:
    post:
      operationId: members/search
      tags:
        - members
      summary: Search for Members
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "organization_ids": ["organization-test-b081f00b-c290-4e6f-8219-2f79942ccc6b"],
                    "limit": 100,
                    "cursor": ""
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/search-organizations
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  results_metadata:
                    type: object
                    properties:
                      next_cursor:
                        type: string
                      total:
                        type: integer
                  members:
                    type: array
                    items:
                      $ref: "#/components/schemas/Member"
                  organizations:
                    type: array
                    items:
                      $ref: "#/components/schemas/Organization"
                required:
                  - request_id
                  - status_code
                  - results_metadata
                  - members
                  - organizations
  /v1/b2b/organizations/{organization_id}/members/passwords/{member_password_id}:
    delete:
      operationId: members/delete_password
      tags:
        - members
      summary: Delete Member password
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
        - name: member_password_id
          in: path
          schema:
            type: string
          required: true
          example: member-password-test-51861cbc-d3b9-428b-9761-227f5fb12be9
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  member_id:
                    type: string
                  member:
                    $ref: "#/components/schemas/Member"
                  organization:
                    $ref: "#/components/schemas/Organization"
                required:
                  - request_id
                  - status_code
                  - member_id
                  - member
                  - organization
  /v1/b2b/organizations/{organization_id}/members/mfa_phone_numbers/{member_id}:
    delete:
      operationId: members/delete_mfa_phone_number
      tags:
        - members
      summary: Delete Member MFA phone number
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
        - name: member_id
          in: path
          schema:
            type: string
          required: true
          example: member-test-a5a2f9f7-d150-49fb-94b0-adacbae82a70
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  member_id:
                    type: string
                  member:
                    $ref: "#/components/schemas/Member"
                  organization:
                    $ref: "#/components/schemas/Organization"
                required:
                  - request_id
                  - status_code
                  - member_id
                  - member
                  - organization
  /v1/b2b/organizations/{organization_id}/members/{member_id}/totp:
    delete:
      operationId: members/delete_mfa_totp
      tags:
        - members
      summary: Delete Member MFA TOTP
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
        - name: member_id
          in: path
          schema:
            type: string
          required: true
          example: member-test-a5a2f9f7-d150-49fb-94b0-adacbae82a70
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                  status_code:
                    type: integer
                  member_id:
                    type: string
                  member:
                    $ref: "#/components/schemas/Member"
                  organization:
                    $ref: "#/components/schemas/Organization"
                required:
                  - request_id
                  - status_code
                  - member_id
                  - member
                  - organization
  /v1/b2b/rbac/policy:
    get:
      operationId: rbac/get_policy
      tags:
        - rbac
      summary: Get RBAC Policy
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/magic_links/email/login_or_signup:
    post:
      operationId: magic_links/login_or_signup
      tags:
        - magic_links
      summary: Send login or signup email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "organization_id": "organization-test-51096cce-277f-4645-b7fd-b7432fc038a9",
                    "email_address": "test@stytch.com"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/send-login-signup-email
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/magic_links/email/invite:
    post:
      operationId: magic_links/invite
      tags:
        - magic_links
      summary: Send invite email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "organization_id": "organization-test-51096cce-277f-4645-b7fd-b7432fc038a9",
                    "email_address": "test@stytch.com"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/send-invite-email
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/magic_links/authenticate:
    post:
      operationId: magic_links/authenticate
      tags:
        - magic_links
      summary: Authenticate Magic Link
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "magic_links_token": "vufHxvOdF7DcKeyZbgmxqYX2lrCGo8Y7c3aTe1XIwVVZ",
                    "session_duration_minutes": 60
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/authenticate-magic-link
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/magic_links/email/discovery/send:
    post:
      operationId: magic_links/send_discovery
      tags:
        - magic_links
      summary: Send discovery email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "email_address": "test@stytch.com"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/send-discovery-email
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/magic_links/discovery/authenticate:
    post:
      operationId: magic_links/authenticate_discovery
      tags:
        - magic_links
      summary: Authenticate discovery Magic Link
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "discovery_magic_links_token": "token_here"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/authenticate-discovery-magic-link
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/public/oauth/google/start:
    get:
      operationId: oauth/login_google
      tags:
        - oauth
      summary: Login with Google
      security:
        - noauthAuth: []
      parameters:
        - name: public_token
          in: query
          schema:
            type: string
          example: "{{PUBLIC_TOKEN}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/public/oauth/microsoft/start:
    get:
      operationId: oauth/login_microsoft
      tags:
        - oauth
      summary: Login with Microsoft
      security:
        - noauthAuth: []
      parameters:
        - name: public_token
          in: query
          schema:
            type: string
          example: "{{PUBLIC_TOKEN}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/oauth/authenticate:
    post:
      operationId: oauth/authenticate
      tags:
        - oauth
      summary: Authenticate OAuth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "oauth_token": ""
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/email-reset
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/public/oauth/google/discovery/start:
    get:
      operationId: oauth/discovery_google
      tags:
        - oauth
      summary: Use Google for discovery
      security:
        - noauthAuth: []
      parameters:
        - name: public_token
          in: query
          schema:
            type: string
          example: "{{PUBLIC_TOKEN}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/public/oauth/microsoft/discovery/start:
    get:
      operationId: oauth/discovery_microsoft
      tags:
        - oauth
      summary: Use Microsoft for discovery
      security:
        - noauthAuth: []
      parameters:
        - name: public_token
          in: query
          schema:
            type: string
          example: "{{PUBLIC_TOKEN}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/oauth/discovery/authenticate:
    post:
      operationId: oauth/authenticate_discovery
      tags:
        - oauth
      summary: Authenticate discovery OAuth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                discovery_oauth_token: ""
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sessions/jwks/{project_id}:
    get:
      operationId: session/get_jwks
      tags:
        - session
      summary: Get JWKs
      parameters:
        - name: project_id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sessions:
    get:
      operationId: session/get
      tags:
        - session
      summary: Get Session
      parameters:
        - name: organization_id
          in: query
          schema:
            type: string
          example: organization-test-51096cce-277f-4645-b7fd-b7432fc038a9
        - name: member_id
          in: query
          schema:
            type: string
          example: member-test-24f7d7fd-4a57-4921-a159-b3cc5f93ce64
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sessions/authenticate:
    post:
      operationId: session/authenticate
      tags:
        - session
      summary: Authenticate Session
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "session_token": "E5RqJjUOSf4FSyaY8_A64unM058qhHMYpxXVDGAFt3Rb"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/authenticate-session
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sessions/exchange:
    post:
      operationId: session/exchange
      tags:
        - session
      summary: Exchange session
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "organization_id": "organization-test-8b40bc71-0147-45e6-8dd7-6602ad4896af",
                    "session_token": "session_token_here"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/exchange-session
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sessions/revoke:
    post:
      operationId: session/revoke
      tags:
        - session
      summary: Revoke Session
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "member_session_id": "member-session-test-e84e3e2d-8e6f-4caf-a29f-df1351239106"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/revoke-session
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sso/saml/{organization_id}:
    post:
      operationId: sso/create_saml
      tags:
        - sso
      summary: Create SAML Connection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {}

                // For all available parameters see
                https://stytch.com/docs/b2b/api/create-saml-connection
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sso/saml/{organization_id}/connections/{connection_id}:
    put:
      operationId: sso/update_saml
      tags:
        - sso
      summary: Update SAML Connection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "display_name": "Updated name"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/update-saml-connection
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
        - name: connection_id
          in: path
          schema:
            type: string
          required: true
          example: saml-connection-test-d2df88fc-f062-46d4-a821-9418642fc0ee
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sso/saml/{organization_id}/connections/{connection_id}/url:
    put:
      operationId: sso/update_saml_by_metadata_url
      tags:
        - sso
      summary: Update SAML Connection by metadata URL
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                metadata_url: ""
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
        - name: connection_id
          in: path
          schema:
            type: string
          required: true
          example: saml-connection-test-d2df88fc-f062-46d4-a821-9418642fc0ee
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sso/oidc/{organization_id}:
    post:
      operationId: sso/create_oidc
      tags:
        - sso
      summary: Create OIDC Connection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {}

                // For all available parameters see
                https://stytch.com/docs/b2b/api/create-oidc-connection
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sso/oidc/{organization_id}/connections/{connection_id}:
    put:
      operationId: sso/update_oidc
      tags:
        - sso
      summary: Update OIDC Connection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "display_name": "Updated name"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/update-oidc-connection
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
        - name: connection_id
          in: path
          schema:
            type: string
          required: true
          example: oidc-connection-test-fec0bc42-2bea-49ca-a8bd-02ebf72c5abc
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sso/{organization_id}:
    get:
      operationId: sso/get_connections
      tags:
        - sso
      summary: Get SSO Connections
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sso/{organization_id}/connections/{connection_id}:
    delete:
      operationId: sso/delete_connection
      tags:
        - sso
      summary: Delete SSO Connection
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
        - name: connection_id
          in: path
          schema:
            type: string
          required: true
          example: saml-connection-test-d2df88fc-f062-46d4-a821-9418642fc0ee
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/public/sso/start:
    get:
      operationId: sso/start
      tags:
        - sso
      summary: Start SSO Authentication
      parameters:
        - name: connection_id
          in: query
          schema:
            type: string
          example: saml-connection-test-1e8a4491-2138-47cd-a579-ebe040f1ff5c
        - name: public_token
          in: query
          schema:
            type: string
          example: "{{PUBLIC_TOKEN}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sso/authenticate:
    post:
      operationId: sso/complete
      tags:
        - sso
      summary: Complete SSO Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "sso_token": "token_here",
                    "session_duration_minutes": 60
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/sso-authenticate
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sso/saml/{organization_id}/connections/{connection_id}/verification_certificates/{certificate_id}:
    delete:
      operationId: sso/delete_saml_verification_certificate
      tags:
        - sso
      summary: Delete SAML Verification Certificate
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
        - name: connection_id
          in: path
          schema:
            type: string
          required: true
          example: saml-connection-test-d2df88fc-f062-46d4-a821-9418642fc0ee
        - name: certificate_id
          in: path
          schema:
            type: string
          required: true
          example: saml-signing-key-test-5eb257b6-d45f-476e-9af1-a0aba0848ead
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sso/external/{organization_id}:
    post:
      operationId: sso/create_external_connection
      tags:
        - sso
      summary: Create External Connection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "external_organization_id": "External Org ID",
                    "external_connection_id": "External Org SSO Connection ID"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/create-external-connection
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            Globally unique UUID that identifies a specific Organization. The
            organization_id is critical to perform operations on an
            Organization, so be sure to preserve this value.
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/sso/external/{organization_id}/connections/{connection_id}:
    put:
      operationId: sso/update_external_connection
      tags:
        - sso
      summary: Update External Connection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {}

                // For all available parameters see
                https://stytch.com/docs/b2b/api/update-external-connection
      parameters:
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            Globally unique UUID that identifies a specific Organization. The
            organization_id is critical to perform operations on an
            Organization, so be sure to preserve this value.
          example: organization-test-309192b4-b07d-454d-ac2c-690125f6ea96
        - name: connection_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            Globally unique UUID that identifies a specific External SSO
            Connection.
          example: saml-connection-test-d2df88fc-f062-46d4-a821-9418642fc0ee
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/discovery/organizations:
    post:
      operationId: discovery/list
      tags:
        - discovery
      summary: List discovered Organizations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "intermediate_session_token": "token_here"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/list-discovered-organizations
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/discovery/organizations/create:
    post:
      operationId: discovery/create_organization
      tags:
        - discovery
      summary: Create Organization via Discovery
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "intermediate_session_token": "token_here",
                    "session_duration_minutes": 60,
                    "organization_name": "Stytch",
                    "organization_slug": "stytch"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/create-organization-via-discovery
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/discovery/intermediate_sessions/exchange:
    post:
      operationId: discovery/exchange_intermediate_session
      tags:
        - discovery
      summary: Exchange intermediate session
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "intermediate_session_token": "token_here",
                    "organization_id": "organization-test-39520e41-3912-41e1-9ef0-95388bb8356c"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/exchange-intermediate-session
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/passwords/authenticate:
    post:
      operationId: passwords/authenticate
      tags:
        - passwords
      summary: Authenticate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "organization_id": "organization-test-51096cce-277f-4645-b7fd-b7432fc038a9",
                    "email_address": "test@stytch.com",
                    "password": "123abc"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/passwords-authenticate
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/passwords/email/reset/start:
    post:
      operationId: passwords/email_reset_start
      tags:
        - passwords
      summary: Password reset by email start
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "organization_id": "organization-test-51096cce-277f-4645-b7fd-b7432fc038a9",
                    "email_address": "test@stytch.com"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/email-reset-start
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/passwords/email/reset:
    post:
      operationId: passwords/email_reset
      tags:
        - passwords
      summary: Password reset by email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "password_reset_token": "TOKEN_HERE",
                    "password": "123abc"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/email-reset
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/passwords/existing_password/reset:
    post:
      operationId: passwords/existing_reset
      tags:
        - passwords
      summary: Password reset by existing password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "organization_id": "organization-test-51096cce-277f-4645-b7fd-b7432fc038a9",
                    "email_address": "test@stytch.com",
                    "existing_password": "zxcvbn123",
                    "new_password": "123abc"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/existing-reset
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/passwords/session/reset:
    post:
      operationId: passwords/session_reset
      tags:
        - passwords
      summary: Password reset by session
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "organization_id": "organization-test-51096cce-277f-4645-b7fd-b7432fc038a9",
                    "password": "123abc",
                    "session_token": "TOKEN"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/passwords-authenticate
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/passwords/strength_check:
    post:
      operationId: passwords/strength_check
      tags:
        - passwords
      summary: Strength check
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "email_address": "test@stytch.com",
                    "password": "123abc"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/strength-check
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/passwords/migrate:
    post:
      operationId: passwords/migrate
      tags:
        - passwords
      summary: Migrate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "organization_id": "organization-test-51096cce-277f-4645-b7fd-b7432fc038a9",
                    "email_address": "test@stytch.com",
                    "hash_type": "bcrypt",
                    "hash": "$2a$04$2V5QoDv2NhF7Y/4oKNG.D.Sv1vMOX4ywfpwG7SxGrNo.tSwkgyueO"
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/migrate
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/otps/sms/send:
    post:
      operationId: mfa/sms_send
      tags:
        - mfa
      summary: OTP SMS Send
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "organization_id": "organization-test-51096cce-277f-4645-b7fd-b7432fc038a9",
                    "member_id": ""
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/otp-sms-send
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/totp/authenticate:
    post:
      operationId: mfa/authenticate
      tags:
        - mfa
      summary: Authenticate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "organization_id": "",
                    "member_id": "",
                    "code": ""
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/authenticate-otp-sms
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/otps/sms/authenticate:
    post:
      operationId: mfa/rotate_recovery_codes
      tags:
        - mfa
      summary: Rotate recovery codes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "organization_id": "organization-test-51096cce-277f-4645-b7fd-b7432fc038a9",
                    "member_id": "",
                    "code": ""
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/authenticate-otp-sms
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/recovery_codes/rotate:
    post:
      operationId: mfa/recover
      tags:
        - mfa
      summary: Recover
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                    "organization_id": "organization-test-51096cce-277f-4645-b7fd-b7432fc038a9",
                    "member_id": ""
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/recovery-codes-rotate
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/public/{project_id}/oauth2/token:
    post:
      operationId: m2m/get_token
      tags:
        - m2m
      summary: Get access token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                client_id: ""
                client_secret: ""
                grant_type: client_credentials
      parameters:
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          example: "{{PROJECT_ID}}"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/m2m/clients:
    post:
      operationId: m2m/create_client
      tags:
        - m2m
      summary: Create M2M client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/m2m/clients/{client_id}:
    get:
      operationId: m2m/get_client
      tags:
        - m2m
      summary: Get M2M client
      parameters:
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          example: m2m-client-test-a48cac88-49f5-4d4e-8951-06a2eb5b3ba4
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
    put:
      operationId: m2m/update_client
      tags:
        - m2m
      summary: Update M2M client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                client_name: updated name
      parameters:
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          example: m2m-client-test-a48cac88-49f5-4d4e-8951-06a2eb5b3ba4
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: m2m/delete_client
      tags:
        - m2m
      summary: Delete M2M client
      parameters:
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          example: m2m-client-test-a48cac88-49f5-4d4e-8951-06a2eb5b3ba4
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/m2m/clients/search:
    post:
      operationId: m2m/search_clients
      tags:
        - m2m
      summary: Search M2M clients
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/m2m/clients/{client_id}/secrets/rotate/start:
    post:
      operationId: m2m/start_secret_rotation
      tags:
        - m2m
      summary: Start secret rotation
      requestBody:
        content: {}
      parameters:
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          example: m2m-client-test-a48cac88-49f5-4d4e-8951-06a2eb5b3ba4
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/m2m/clients/{client_id}/secrets/rotate:
    post:
      operationId: m2m/rotate_secret
      tags:
        - m2m
      summary: Rotate secret
      requestBody:
        content: {}
      parameters:
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          example: m2m-client-test-a48cac88-49f5-4d4e-8951-06a2eb5b3ba4
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/m2m/clients/{client_id}/secrets/rotate/cancel:
    post:
      operationId: m2m/cancel_secret_rotation
      tags:
        - m2m
      summary: Cancel secret rotation
      requestBody:
        content: {}
      parameters:
        - name: client_id
          in: path
          schema:
            type: string
          required: true
          example: m2m-client-test-a48cac88-49f5-4d4e-8951-06a2eb5b3ba4
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/otps/email/login_or_signup:
    post:
      operationId: email_otp/login_or_signup
      tags:
        - email_otp
      summary: Send login or signup email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                  "organization_id": "",
                  "email_address": ""
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/send-login-signup-email-otp
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/otps/email/authenticate:
    post:
      operationId: email_otp/authenticate
      tags:
        - email_otp
      summary: Authenticate One-time Passcode (OTP)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: "{\n  \"organization_id\": \"\",\n  \"member_id\": \"\",\n\t\"code\": \"\"\n}\n// For all available parameters see https://stytch.com/docs/b2b/api/authenticate-email-otp"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/otps/email/discovery/send:
    post:
      operationId: email_otp/send_discovery
      tags:
        - email_otp
      summary: Send Discovery Email OTP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                  "email_address": ""
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/send-discovery-email-otp
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/otps/email/discovery/authenticate:
    post:
      operationId: email_otp/authenticate_discovery
      tags:
        - email_otp
      summary: Authenticate Discovery One-Time Passcode (OTP)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                  "email_address": "",
                  "code": ""
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/authenticate-discovery-email-otp
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
  /v1/b2b/impersonation/authenticate:
    post:
      operationId: impersonation/authenticate
      tags:
        - impersonation
      summary: Authenticate Impersonation Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                {
                  "impersonation_token": ""
                }

                // For all available parameters see
                https://stytch.com/docs/b2b/api/authenticate-impersonation-token
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
